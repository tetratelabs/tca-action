name: "Tetrate Config Analyzer"
description: "Validate and analyze Istio service mesh configurations for security, compliance, and best practices"
author: "Tetrate"
inputs:
  tis-password:
    description: "Tetrate Istio Subscription (TIS) password required for authentication. Store this as a secret"
    required: true
  local-only:
    description: "Analyze configuration files locally without connecting to a Kubernetes cluster"
    required: false
    default: "true"
  output-disabled-hyperlink:
    description: "Disable hyperlink in the output"
    required: false
    default: "true"
  mesh-config:
    description: "Path to the Istio configuration file (required when using local-only mode)"
    required: false
    default: ""
  kube-config:
    description: "Path to the Kubernetes config file for cluster analysis. Not used in local-only mode"
    required: false
    default: ""
  version:
    description: "TCA version to use (e.g. 'v1.1.0'). Default is 'latest'"
    required: false
    default: "latest"
  github-token:
    description: "GitHub token for downloading TCA binary"
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - name: Set GitHub Path
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}

    - name: Get TCA binary
      id: get-tca
      env:
        TIS_PASS: ${{ inputs.tis-password }}
        TCA_VERSION: ${{ inputs.version }}
        GITHUB_ACCESS_TOKEN: ${{ inputs.github-token }}
      run: get-tca.sh
      shell: bash

    - name: Run TCA analyzer
      shell: bash
      env:
        TIS_PASS: ${{ inputs.tis-password }}
      run: |
        ARGS="--output-disabled-hyperlink=${{ inputs.output-disabled-hyperlink }}"
        if [[ "${{ inputs.local-only }}" == "true" ]]; then
          ARGS="--local-only"
        fi
        if [[ -n "${{ inputs.mesh-config }}" ]]; then
          ARGS="${ARGS} -f ${{ inputs.mesh-config }}"
        fi
        if [[ -n "${{ inputs.kube-config }}" ]]; then
          ARGS="${ARGS} -c ${{ inputs.kube-config }}"
        fi
        tca analyze $ARGS
